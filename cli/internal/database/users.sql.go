// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package database

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users(id, name, created_at, updated_at, hashed_password, email, is_verified)
VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?
)
RETURNING id, name, created_at, updated_at, hashed_password, email, is_verified
`

type CreateUserParams struct {
	ID             string
	Name           string
	CreatedAt      string
	UpdatedAt      string
	HashedPassword string
	Email          string
	IsVerified     sql.NullBool
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.Name,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.HashedPassword,
		arg.Email,
		arg.IsVerified,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.HashedPassword,
		&i.Email,
		&i.IsVerified,
	)
	return i, err
}
