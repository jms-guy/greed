// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: accounts.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts(id, created_at, updated_at, balance, goal, currency, user_id)
VALUES (
    $1,
    NOW(),
    NOW(),
    $2,
    $3,
    $4,
    $5
)
RETURNING id, created_at, updated_at, balance, goal, currency, user_id
`

type CreateAccountParams struct {
	ID       uuid.UUID
	Balance  sql.NullString
	Goal     sql.NullString
	Currency string
	UserID   uuid.UUID
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount,
		arg.ID,
		arg.Balance,
		arg.Goal,
		arg.Currency,
		arg.UserID,
	)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Balance,
		&i.Goal,
		&i.Currency,
		&i.UserID,
	)
	return i, err
}

const resetAccounts = `-- name: ResetAccounts :exec
DELETE FROM accounts
`

func (q *Queries) ResetAccounts(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, resetAccounts)
	return err
}
